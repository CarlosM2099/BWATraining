@page "/"
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@inject OrderState OrderState
@inject IJSRuntime JSRuntime
@code {
    List<PizzaSpecial> specials;

    protected async override Task OnInitializedAsync()
    {
        specials = await httpClient.GetFromJsonAsync<List<PizzaSpecial>>("specials");
    }

    private async Task RemovePizza(Pizza configuredPizza)
    {
        if (await JSRuntime.Confirm($"Desea eliminar la pizza {configuredPizza.Special.Name}?"))
        {
            OrderState.RemoveConfiguredPizza(configuredPizza);
        }
    }
}

<div class="main">
    <ul class="pizza-cards">
        @if (specials != null)
        {
            @foreach (var special in specials)
            {
                <li style="background-image: url('@special.ImageUrl')"
                    @onclick="@(() => OrderState.ShowConfigurePizzaDialog(special))">
                    <div class="pizza-info">
                        <span class="title">@special.Name</span>
                        @special.Description
                        <span class="price">
                            @special.GetFormattedBasePrice()
                        </span>
                    </div>
                </li>
            }
        }
    </ul>
</div>

<div class="sidebar">
    @if (OrderState.Order.Pizzas.Any())
    {
        <div class="order-contents">
            <h2>Tu Orden</h2>
            @foreach (var configuredPizza in OrderState.Order.Pizzas)
            {
                <ConfigurePizzaItem Pizza="configuredPizza" OnRemoved="() => RemovePizza(configuredPizza)"></ConfigurePizzaItem>
            }
        </div>
    }
    else
    {
        <div class="empty-cart">Selecciona una pizza <br />para empezar.</div>
    }
    <div class="order-total @(OrderState.Order.Pizzas.Any() ? "" : "hidden")">
        Total:
        <span class="total-price">@OrderState.Order.GetFormattedTotalPrice()</span>
        <a class="btn btn-warning" href=@(OrderState.Order.Pizzas.Count == 0 ? "/" :"checkout")>Ordenar ></a>
    </div>

</div>

@if (OrderState.ShowingConfigureDialog)
{
    <ConfigurePizzaDialog Pizza="OrderState.ConfiguringPizza" OnCancel="OrderState.CancelConfigurePizzaDialog" OnConfirm="OrderState.ConfirmConfigurePizzaDialog"></ConfigurePizzaDialog>
}